<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="96528817-b786-4ce5-8761-2fc899131a1b" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/env.d.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/index.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/package-lock.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/public/favicon.ico" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/App.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/assets/base.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/assets/logo.svg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/assets/main.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/components/HelloWorld.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/components/TheWelcome.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/components/WelcomeItem.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/components/__tests__/HelloWorld.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/components/icons/IconCommunity.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/components/icons/IconDocumentation.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/components/icons/IconEcosystem.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/components/icons/IconSupport.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/components/icons/IconTooling.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/main.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/router/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/stores/counter.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/views/AboutView.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/src/views/HomeView.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/tsconfig.app.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/tsconfig.node.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/tsconfig.vitest.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/vite.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/A2/src/main/vite-project/vitest.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/java/com/example/testsecurity/controller/HelloController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/java/com/example/testsecurity/domain/MyResult.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/java/com/example/testsecurity/domain/MyUserDetails.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/java/com/example/testsecurity/entity/MyOrder.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/java/com/example/testsecurity/entity/MyUser.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/java/com/example/testsecurity/repository/UserRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/java/com/example/testsecurity/service/MyUserDetailsService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/resources/application.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/env.d.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/index.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/package-lock.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/public/favicon.ico" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/App.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/assets/base.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/assets/logo.svg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/assets/main.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/components/HelloWorld.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/components/TheWelcome.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/components/WelcomeItem.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/components/__tests__/HelloWorld.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/components/icons/IconCommunity.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/components/icons/IconDocumentation.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/components/icons/IconEcosystem.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/components/icons/IconSupport.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/components/icons/IconTooling.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/main.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/router/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/stores/counter.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/views/AboutView.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/src/views/HomeView.vue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/tsconfig.app.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/tsconfig.node.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/tsconfig.vitest.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/vite.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/main/vite-project/vitest.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test-security/src/test/java/com/example/testsecurity/LombokTests.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.mvn/wrapper/maven-wrapper.jar" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.mvn/wrapper/maven-wrapper.properties" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/A2/src/main/vue-front" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/A3/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/A3/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/UdpTest/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/UdpTest/.mvn/wrapper/maven-wrapper.jar" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/UdpTest/.mvn/wrapper/maven-wrapper.properties" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/UdpTest/mvnw" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/UdpTest/mvnw.cmd" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/UdpTest/pom.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/UdpTest/src/main/java/com/example/udptest/UdpTestApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/test-security/src/main/java/com/example/testsecurity/TestSecurityApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/UdpTest/src/main/resources/application.properties" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/UdpTest/src/test/java/com/example/udptest/UdpTestApplicationTests.java" beforeDir="false" afterPath="$PROJECT_DIR$/test-security/src/test/java/com/example/testsecurity/TestSecurityApplicationTests.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/demo.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="useMavenConfig" value="true" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectId" id="2QCaDV0QrThpIMOrRJ1DfWkiiug" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Spring Boot.A1Application">
    <configuration name="A1Application" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="A1" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.a2.A1Application" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="A2Application" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="A2" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.a2.A2Application" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EurekaServerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="eureka-server" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.eureka_server.EurekaServerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="GatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="gateway" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.gateway.GatewayApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="order-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.order_service.OrderServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="user-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.user_service.UserServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="96528817-b786-4ce5-8761-2fc899131a1b" name="Changes" comment="" />
      <created>1684859900233</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1684859900233</updated>
      <workItem from="1684859901472" duration="413000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
</project>